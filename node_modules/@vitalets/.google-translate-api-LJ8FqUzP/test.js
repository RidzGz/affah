var test = require('ava');
var Configstore = require('configstore');
var languages = require('./languages.js');
var translate = require('./index.js');

const config = new Configstore('google-translate-api');

test.beforeEach(() => {
    config.clear();
});

test('translate without any options', async t => {
    const res = await translate('vertaler');

    t.is(res.text, 'translator');
    t.false(res.from.language.didYouMean);
    t.is(res.from.language.iso, 'nl');
    t.false(res.from.text.autoCorrected);
    t.is(res.from.text.value, '');
    t.false(res.from.text.didYouMean);
});

test('translate from auto to dutch', async t => {
    const res = await translate('translator', {from: 'en', to: 'nl'});

    t.is(res.text, 'vertaler');
    t.false(res.from.language.didYouMean);
    t.is(res.from.language.iso, 'en');
    t.false(res.from.text.autoCorrected);
});

test('translate several sentences with spaces (#73)', async t => {
    const res = await translate(
        'translator, translator. translator! translator? translator,translator.translator!translator?',
        {from: 'auto', to: 'nl'}
    );

    t.is(res.text, 'vertaler, vertaler. vertaler! vertaler? Vertaler, vertaler.translator! Vertaler?');
});

test('test pronunciation', async t => {
    const res = await translate('translator', {from: 'auto', to: 'zh-CN'});

    // here can be 2 variants: 'Yì zhě', 'Fānyì'
    t.regex(res.pronunciation, /^(Yì zhě)|(Fānyì)$/);
});

test('translate some english text setting the source language as portuguese', async t => {
    const res = await translate('happy', {from: 'pt', to: 'nl'});

    t.true(res.from.language.didYouMean);
    t.is(res.from.language.iso, 'en');
});

test('translate some misspelled english text to dutch', async t => {
    const res = await translate('I spea Dutch', {from: 'en', to: 'nl'});

    if (res.from.text.autoCorrected || res.from.text.didYouMean) {
        t.is(res.from.text.value, 'I [speak] Dutch');
    } else {
        t.fail();
    }
});

test('translate some text and get th