{
  "name": "image-q",
  "version": "4.0.0",
  "description": "Image Quantization Library in **TypeScript** *(MIT Licensed)*",
  "license": "MIT",
  "contributors": [],
  "homepage": "https://github.com/ibezkrovnyi/image-quantization/tree/main/packages/image-q",
  "main": "./dist/cjs/image-q.cjs",
  "module": "./dist/esm/image-q.mjs",
  "types": "./dist/types/src/index.d.ts",
  "exports": {
    "types": "./dist/types/src/index.d.ts",
    "import": "./dist/esm/image-q.mjs",
    "require": "./dist/cjs/image-q.cjs",
    "default": "./dist/esm/image-q.mjs"
  },
  "files": [
    "dist",
    "src"
  ],
  "preferGlobal": false,
  "keywords": [
    "image",
    "palette",
    "quantization",
    "quantizer",
    "color",
    "neuquant",
    "rgbquant",
    "xiaolin wu",
    "cie94 distance",
    "ciede2000",
    "dithering",
    "floyd-steinberg"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/ibezkrovnyi/image-quantization"
  },
  "bugs": {
    "url": "https://github.com/ibezkrovnyi/image-quantization/issues"
  },
  "devDependencies": {
    "@types/pngjs": "3.3.0",
    "gh-pages": "3.2.3",
    "pngjs": "3.3.3",
    "typedoc": "0.22.10"
  },
  "dependencies": {
    "@types/node": "16.9.1"
  },
  "scripts": {
    "clean": "shx rm -rf ./node_modules/.cache",
    "build": "pnpm compile:types && pnpm compile:esm && pnpm compile:cjs && shx cp ../../README.md ./",
    "test": "jest",
    "gh-pages": "shx rm -rf ./docs && typedoc && gh-pages -d docs",
    "compile:types": "tsc -p tsconfig.compile.json",
    "compile:esm": "esbuild src/index.ts --outfile=dist/esm/image-q.mjs --tsconfig=tsconfig.compile.json --format=esm --platform=neutral --sourcemap --target=es2020,chrome58,node12 --bundle",
    "compile:cjs": "esbuild src/index.ts --outfile=dist/cjs/image-q.cjs --tsconfig=tsconfig.compile.json --format=cjs --platform=node --sourcemap --target=es2020,chrome58,node12 --bundle"
  },
  "readme": "## image-q\n\nComplete Image Quantization Library in **TypeScript** _(MIT License)_\n\n[![Demo (outdated, use /packages/demo for up-to-date demo)](https://img.shields.io/badge/demo-online-brightgreen.svg)](https://ibezkrovnyi.github.io/image-quantization-demo/)\n[![GitHub](https://img.shields.io/badge/github-.com-brightgreen.svg)](https://github.com/ibezkrovnyi/image-quantization/tree/main/packages/image-q)\n[![NPM](https://badge.fury.io/js/image-q.svg)](https://www.npmjs.com/package/image-q)\n[![API)](https://img.shields.io/badge/API-Available-blue.svg)](http://ibezkrovnyi.github.io/image-quantization/)\n[![NPM License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n\n![quantization](packages/image-q/quantization.png)\n\n## Table of Contents\n\n- [<span style=\"color: red\">API Documentation and Usage</span>](http://ibezkrovnyi.github.io/image-quantization/)\n- [Introduction](#introduction)\n- [Features](#features)\n- [Todo](#todo)\n- [Breaking changes](#breaking-changes)\n- [Changelog](#changelog)\n- [Credits](#credits)\n- [References](#references)\n- [License](#license)\n\n## Introduction\n\nImage Color Number Reduction with alpha support using RGBQuant/NeuQuant/Xiaolin Wu's algorithms and Euclidean/Manhattan/CIEDE2000 color distance formulas in TypeScript\n\n## Features\n\n1. Platforms supported\n\n   - Browser (Chrome 7.0+, FireFox 4.0+, IE 10+, Opera 11.6+, Safari 5.1+)\n   - Node.js 6.0+\n\n2. API\n   - Basic API: sync and promise-based async\n   - Advanced API: sync and generator-based\n3. Builds\n\n   - `dist/cjs/image-q.js` - CommonJS\n   - `dist/esm/image-q.js` - ESM (ESNext)\n   - `dist/cjs/image-q.js` - UMD\n\n4. Import\n   - `HTMLImageElement`\n   - `HTMLCanvasElement`\n   - `NodeCanvas`\n   - `ImageData`\n   - `Array`\n   - `CanvasPixelArray`\n   - `Uint8Array`\n   - `Uint32Array`\n5. Color Distance\n\n   - `Euclidean` - 1/1/1/1 coefficients (originally used in Xiaolin Wu's Quantizer **WuQuant**)\n   - `EuclideanBT709NoAlpha` - BT.709 sRGB coefficients (originally used in **RGBQuant**)\n   - `EuclideanBT709` BT.709 sRGB coefficients + alpha support\n   - `Manhattan` - 1/1/1/1 coefficients (originally used in **NeuQuant**)\n   - `ManhattanBT709` - BT.709 sRGB coefficients\n   - `ManhattanNommyde` - see https://github.com/igor-bezkrovny/image-quantization/issues/4#issuecomment-234527620\n   - `CIEDE2000` - CIEDE2000 (very slow)\n   - `CIE94Textiles` - CIE94 implementation for textiles\n   - `CIE94GraphicArts` - CIE94 implementation for graphic arts\n   - `CMetric` - see http://www.compuphase.com/cmetric.htm\n   - `PNGQuant` - used in pngQuant tool\n\n6. Palette Quantizers\n   - `NeuQuant` (original code ported, integer calculations)\n   - `NeuQuantFloat` (floating-point calculations)\n   - `RGBQuant`\n   - `WuQuant`\n7. Image Quantizers\n\n   - `NearestColor`\n   - `ErrorDiffusionArray` - two modes of error propagation are supported: `xnview` and `gimp`\n     1. `FloydSteinberg`\n     2. `FalseFloydSteinberg`\n     3. `Stucki`\n     4. `Atkinson`\n     5. `Jarvis`\n     6. `Burkes`\n     7. `Sierra`\n     8. `TwoSierra`\n     9. `SierraLite`\n   - `ErrorDiffusionRiemersma` - Hilbert space-filling curve is used\n\n8. Output\n   - `Uint32Array`\n   - `Uint8Array`\n\n## Include `image-q` library into your project\n\n##### ES6 module\n\n```javascript\n// will import ESM (ESNext) or UMD version depending on your bundler/node\nimport * as iq from 'image-q';\n```\n\n##### CommonJS\n\n```javascript\nvar iq = require('image-q');\n```\n\n##### As a global variable (Browser)\n\n```html\n<script\n  src=\"<path-to image-q/dist/umd/image-q.js>\"\n  type=\"text/javascript\"\n  charset=\"utf-8\"\n></script>\n```\n\n